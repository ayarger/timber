[gd_scene load_steps=15 format=2]

[ext_resource path="res://Components/IsSelectable.tscn" type="PackedScene" id=1]
[ext_resource path="res://Actor.cs" type="Script" id=2]
[ext_resource path="res://circle_256.png" type="Texture" id=3]
[ext_resource path="res://scenes/HasStats.tscn" type="PackedScene" id=4]
[ext_resource path="res://fogofwartesting/StateManager.cs" type="Script" id=5]
[ext_resource path="res://fogofwartesting/MovementState.cs" type="Script" id=6]
[ext_resource path="res://fogofwartesting/HasTeam.cs" type="Script" id=7]
[ext_resource path="res://scenes/Actor.tres" type="Material" id=8]
[ext_resource path="res://temp_scenes/StatManager.tscn" type="PackedScene" id=9]
[ext_resource path="res://fogofwartesting/MeleeCombatState.cs" type="Script" id=10]

[sub_resource type="QuadMesh" id=6]

[sub_resource type="QuadMesh" id=4]

[sub_resource type="Shader" id=7]
code = "shader_type spatial;

uniform sampler2D fowTexture;

uniform vec3 world_position;

uniform float screenPosX = 0.0f;
uniform float screenPosZ = 0.0f;

uniform float screenHeight = 5.0f;
uniform float screenWidth = 5.0f;

uniform sampler2D texture_albedo : hint_albedo;
uniform float alpha_cutout_threshold : hint_range(0, 1) = 0.5;

uniform float alpha = 0.4f;
uniform vec3 color = vec3(0.0f, 0.0f, 0.0f);

void fragment() {
	float visibility_value = texture(fowTexture,vec2((world_position.x-screenPosX)/screenWidth,((world_position.z-screenPosZ)/screenHeight))).r;
    vec4 tex_color = texture(texture_albedo, UV);
	ALBEDO = color * visibility_value;
	ALPHA = alpha;
	if(visibility_value < 0.001f)
		discard;
	
    // Perform alpha cutout
    if(tex_color.a < 0.5f)
        discard;
}
"

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )
shader_param/world_position = null
shader_param/screenPosX = 0.0
shader_param/screenPosZ = 0.0
shader_param/screenHeight = 5.0
shader_param/screenWidth = 5.0
shader_param/alpha_cutout_threshold = 0.5
shader_param/alpha = 0.4
shader_param/color = Vector3( 0, 0, 0 )
shader_param/texture_albedo = ExtResource( 3 )

[node name="actor" type="Spatial" groups=["actors"]]
script = ExtResource( 2 )

[node name="view" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 0.707107, 0.707107, 0, -0.707107, 0.707107, 0, 0.00941655, 0 )

[node name="mesh" type="MeshInstance" parent="view"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.504038, -0.00558106 )
mesh = SubResource( 6 )
material/0 = ExtResource( 8 )

[node name="shadow" type="MeshInstance" parent="."]
transform = Transform( 1.37523, 0, 0, 0, -4.37114e-08, 1, 0, -0.620762, -2.71344e-08, 0, 0.0083809, 0 )
sorting_offset = -1.0
sorting_use_aabb_center = false
cast_shadow = 0
mesh = SubResource( 4 )
material/0 = SubResource( 8 )

[node name="IsSelectable" parent="." instance=ExtResource( 1 )]

[node name="HasStats" parent="." instance=ExtResource( 4 )]

[node name="StateManager" type="Node" parent="."]
script = ExtResource( 5 )

[node name="MovingState" type="Node" parent="StateManager"]
script = ExtResource( 6 )

[node name="CombatState" type="Node" parent="StateManager"]
script = ExtResource( 10 )

[node name="HasTeam" type="Node" parent="."]
script = ExtResource( 7 )

[node name="StatManager" parent="." instance=ExtResource( 9 )]
