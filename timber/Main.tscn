[gd_scene load_steps=27 format=2]

[ext_resource path="res://scenes/GameManager.tscn" type="PackedScene" id=1]
[ext_resource path="res://DebugSphere.cs" type="Script" id=2]
[ext_resource path="res://GameplayCamera.cs" type="Script" id=3]
[ext_resource path="res://LuaLoader.cs" type="Script" id=4]
[ext_resource path="res://selection_square.tscn" type="PackedScene" id=5]
[ext_resource path="res://Icon3D.cs" type="Script" id=6]
[ext_resource path="res://SelectionSystem.cs" type="Script" id=7]
[ext_resource path="res://scenes/GameManager.cs" type="Script" id=8]
[ext_resource path="res://MeshIcon.cs" type="Script" id=9]
[ext_resource path="res://InputManager.cs" type="Script" id=10]
[ext_resource path="res://gradient256.png" type="Texture" id=11]
[ext_resource path="res://lives_tex.png" type="Texture" id=12]
[ext_resource path="res://spot_hud_face.png" type="Texture" id=13]
[ext_resource path="res://square.png" type="Texture" id=14]
[ext_resource path="res://temp_scenes/TempConsole.tscn" type="PackedScene" id=15]
[ext_resource path="res://fogofwartesting/FogOfWar.tscn" type="PackedScene" id=16]
[ext_resource path="res://fogofwartesting/TestMovement.cs" type="Script" id=17]
[ext_resource path="res://temp_scenes/HUD.tscn" type="PackedScene" id=18]
[ext_resource path="res://LuaEngine/NLuaScriptManager.cs" type="Script" id=19]
[ext_resource path="res://fogofwartesting/TestAttack.cs" type="Script" id=20]
[ext_resource path="res://temp_scripts/DamageTextManager.cs" type="Script" id=21]

[sub_resource type="GDScript" id=2]

[sub_resource type="SpatialMaterial" id=1]
flags_unshaded = true

[sub_resource type="QuadMesh" id=3]

[sub_resource type="ViewportTexture" id=16]
viewport_path = NodePath("FogOfWar/HighVisibility")

[sub_resource type="ShaderMaterial" id=11]

[sub_resource type="Shader" id=13]
code = "shader_type canvas_item;

// Uniform to control the number of filled segments
uniform int num_segments : hint_range(1, 20) = 4;

// Uniform to control the maximum number of segments
uniform int max_num_segments : hint_range(1, 20) = 5;

// Uniform to control the thickness of the ring (0.0 to 1.0)
uniform float thickness : hint_range(0.0, 1.0) = 0.3;

// Uniform to control the width of the gap between segments
uniform float gap : hint_range(0.0, 0.1) = 0.03;

// Uniform to control the starting angle of the segments (in degrees)
uniform float start_angle : hint_range(0.0, 360.0) = 0.0;

// Uniform to control the amount of anti-aliasing (edge softness)
uniform float aa_edge_softness : hint_range(0.0, 0.1) = 0.01;

// Uniform to control the start color of the ring
uniform vec4 start_color : hint_color = vec4(1.0, 0.0, 0.0, 1.0);

// Uniform to control the end color of the ring
uniform vec4 end_color : hint_color = vec4(0.0, 1.0, 1.0, 1.0);

const float PI = 3.14159265359;

void fragment() {
    // Convert the pixel coordinates to polar coordinates
    vec2 pos = UV * 2.0 - vec2(1.0);
    float angle = atan(pos.y, pos.x);
    float radius = length(pos);

    // Normalize angle to [0, 1]
    float normalized_angle = angle / (2.0 * PI) + 0.5;

    // Adjust normalized_angle by start_angle
    normalized_angle = 1.0 - (normalized_angle + (start_angle / 360.0));
    if (normalized_angle > 1.0) normalized_angle -= 1.0;

    // Calculate segment width
    float segment_width = 1.0 / float(max_num_segments);
    
    // Calculate which segment the current angle belongs to
    float segment_position = mod(normalized_angle, segment_width);

    // Determine if we are in the gap between segments
    bool in_gap = segment_position > (segment_width - gap);

    // Determine the part of the circle that should be visible
    int current_segment = int(normalized_angle / segment_width) + 1;

    // Anti-aliasing
    float edge_dist = min(abs(radius - (1.0 - thickness)), abs(segment_position - (segment_width - gap)));
    float alpha = smoothstep(0.0, aa_edge_softness, edge_dist);

    // Color interpolation
    vec4 color = mix(start_color, end_color, float(current_segment) / float(max_num_segments));

    if (!in_gap && current_segment <= num_segments && radius < 1.0 && radius > 1.0 - thickness) {
        COLOR = color;
        COLOR.a *= alpha;
    } else {
        discard;
    }
}
"

[sub_resource type="ShaderMaterial" id=14]
shader = SubResource( 13 )
shader_param/num_segments = 4
shader_param/max_num_segments = 5
shader_param/thickness = 0.3
shader_param/gap = 0.03
shader_param/start_angle = 0.0
shader_param/aa_edge_softness = 0.01
shader_param/start_color = Color( 1, 0, 0, 1 )
shader_param/end_color = Color( 0, 1, 1, 1 )

[node name="Main" type="Spatial"]
script = SubResource( 2 )

[node name="GameManager" parent="." instance=ExtResource( 1 )]
script = ExtResource( 8 )

[node name="LuaLoader" type="Node" parent="."]
script = ExtResource( 4 )

[node name="GameplayCamera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 0.707107, 0.707107, 0, -0.707107, 0.707107, 0, 14.5959, 15.5959 )
current = true
fov = 25.8
script = ExtResource( 3 )

[node name="DebugSphere" type="CSGSphere" parent="."]
visible = false
material = SubResource( 1 )
script = ExtResource( 2 )

[node name="SelectionSystem" type="Node" parent="."]
script = ExtResource( 7 )
selection_square_scene = ExtResource( 5 )

[node name="active_cursor" parent="SelectionSystem" instance=ExtResource( 5 )]

[node name="icon" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -0.907975, 0.419024, 0, -0.419024, -0.907975, 36.6761, 12.1712, 27.6394 )
mesh = SubResource( 3 )
script = ExtResource( 6 )

[node name="icon2" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 0.70508, 0.709128, 0, -0.709128, 0.70508, 38.676, 12.1656, 27.6434 )
mesh = SubResource( 3 )
script = ExtResource( 6 )
PerformTrace = false

[node name="FogOfWar" parent="." instance=ExtResource( 16 )]

[node name="Node" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 7.55476, 0 )
script = ExtResource( 9 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="viewport_tex_rect" type="TextureRect" parent="CanvasLayer"]
visible = false
margin_right = 1000.0
margin_bottom = 1000.0
rect_scale = Vector2( 0.5, 0.5 )
texture = SubResource( 16 )
stretch_mode = 1

[node name="bottom_gradient" type="TextureRect" parent="CanvasLayer"]
visible = false
modulate = Color( 0, 0, 0, 1 )
anchor_top = 0.9
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = 40.0
margin_bottom = 40.0
texture = ExtResource( 11 )
expand = true

[node name="HudeFaceLeft_shadow" type="TextureRect" parent="CanvasLayer"]
visible = false
self_modulate = Color( 0, 0, 0, 1 )
material = SubResource( 11 )
anchor_top = 1.0
anchor_bottom = 1.0
margin_left = 10.0
margin_top = -246.0
margin_right = 266.0
margin_bottom = 10.0
texture = ExtResource( 13 )
stretch_mode = 7

[node name="HudeFaceLeft" type="TextureRect" parent="CanvasLayer"]
visible = false
material = SubResource( 11 )
anchor_top = 1.0
anchor_bottom = 1.0
margin_top = -256.0
margin_right = 256.0
texture = ExtResource( 13 )
expand = true
stretch_mode = 6

[node name="TextureRect2" type="TextureRect" parent="CanvasLayer"]
visible = false
material = SubResource( 14 )
margin_left = 347.0
margin_top = 984.0
margin_right = 437.0
margin_bottom = 1104.0
texture = ExtResource( 14 )
expand = true
stretch_mode = 5

[node name="TextureRect" type="TextureRect" parent="CanvasLayer/TextureRect2"]
margin_left = 12.0
margin_top = 13.0
margin_right = 140.0
margin_bottom = 141.0
rect_scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 12 )

[node name="HUD" parent="CanvasLayer" instance=ExtResource( 18 )]

[node name="TempConsole" parent="CanvasLayer" instance=ExtResource( 15 )]

[node name="DirectionalLight2" type="DirectionalLight" parent="."]
transform = Transform( 0.766044, 0.454519, -0.454519, 0, 0.707107, 0.707107, 0.642788, -0.541675, 0.541675, 0, 0, 0 )
shadow_enabled = true
shadow_color = Color( 0.47451, 0.47451, 0.47451, 1 )

[node name="InputManager" type="Node" parent="."]
script = ExtResource( 10 )

[node name="TestMovement" type="Node" parent="."]
script = ExtResource( 17 )

[node name="NLuaManager" type="Node" parent="."]
script = ExtResource( 19 )

[editable path="FogOfWar"]
