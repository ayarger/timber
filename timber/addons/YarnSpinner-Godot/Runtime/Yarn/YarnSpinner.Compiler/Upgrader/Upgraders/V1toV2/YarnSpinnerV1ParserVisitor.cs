//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Users/desplesda/Work/yarnspinner/YarnSpinner.Compiler/Upgrader/Upgraders/V1toV2/YarnSpinnerV1Parser.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Yarn.Compiler {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="YarnSpinnerV1Parser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface IYarnSpinnerV1ParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerV1Parser.dialogue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDialogue([NotNull] YarnSpinnerV1Parser.DialogueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerV1Parser.file_hashtag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFile_hashtag([NotNull] YarnSpinnerV1Parser.File_hashtagContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerV1Parser.node"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNode([NotNull] YarnSpinnerV1Parser.NodeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerV1Parser.header"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHeader([NotNull] YarnSpinnerV1Parser.HeaderContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerV1Parser.body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody([NotNull] YarnSpinnerV1Parser.BodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerV1Parser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] YarnSpinnerV1Parser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerV1Parser.line_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLine_statement([NotNull] YarnSpinnerV1Parser.Line_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerV1Parser.line_formatted_text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLine_formatted_text([NotNull] YarnSpinnerV1Parser.Line_formatted_textContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerV1Parser.format_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormat_function([NotNull] YarnSpinnerV1Parser.Format_functionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>KeyValuePairNamed</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.key_value_pair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKeyValuePairNamed([NotNull] YarnSpinnerV1Parser.KeyValuePairNamedContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>KeyValuePairNumber</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.key_value_pair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKeyValuePairNumber([NotNull] YarnSpinnerV1Parser.KeyValuePairNumberContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerV1Parser.hashtag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHashtag([NotNull] YarnSpinnerV1Parser.HashtagContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerV1Parser.line_condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLine_condition([NotNull] YarnSpinnerV1Parser.Line_conditionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expParens</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpParens([NotNull] YarnSpinnerV1Parser.ExpParensContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expMultDivMod</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpMultDivMod([NotNull] YarnSpinnerV1Parser.ExpMultDivModContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expMultDivModEquals</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpMultDivModEquals([NotNull] YarnSpinnerV1Parser.ExpMultDivModEqualsContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expComparison</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpComparison([NotNull] YarnSpinnerV1Parser.ExpComparisonContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expNegative</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpNegative([NotNull] YarnSpinnerV1Parser.ExpNegativeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expAndOrXor</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpAndOrXor([NotNull] YarnSpinnerV1Parser.ExpAndOrXorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expPlusMinusEquals</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpPlusMinusEquals([NotNull] YarnSpinnerV1Parser.ExpPlusMinusEqualsContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expAddSub</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpAddSub([NotNull] YarnSpinnerV1Parser.ExpAddSubContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expNot</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpNot([NotNull] YarnSpinnerV1Parser.ExpNotContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expValue</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpValue([NotNull] YarnSpinnerV1Parser.ExpValueContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expEquality</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpEquality([NotNull] YarnSpinnerV1Parser.ExpEqualityContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>valueNumber</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValueNumber([NotNull] YarnSpinnerV1Parser.ValueNumberContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>valueTrue</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValueTrue([NotNull] YarnSpinnerV1Parser.ValueTrueContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>valueFalse</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValueFalse([NotNull] YarnSpinnerV1Parser.ValueFalseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>valueVar</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValueVar([NotNull] YarnSpinnerV1Parser.ValueVarContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>valueString</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValueString([NotNull] YarnSpinnerV1Parser.ValueStringContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>valueNull</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValueNull([NotNull] YarnSpinnerV1Parser.ValueNullContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>valueFunc</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValueFunc([NotNull] YarnSpinnerV1Parser.ValueFuncContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerV1Parser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable([NotNull] YarnSpinnerV1Parser.VariableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerV1Parser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction([NotNull] YarnSpinnerV1Parser.FunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerV1Parser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf_statement([NotNull] YarnSpinnerV1Parser.If_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerV1Parser.if_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf_clause([NotNull] YarnSpinnerV1Parser.If_clauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerV1Parser.else_if_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElse_if_clause([NotNull] YarnSpinnerV1Parser.Else_if_clauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerV1Parser.else_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElse_clause([NotNull] YarnSpinnerV1Parser.Else_clauseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>setVariableToValue</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.set_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSetVariableToValue([NotNull] YarnSpinnerV1Parser.SetVariableToValueContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>setExpression</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.set_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSetExpression([NotNull] YarnSpinnerV1Parser.SetExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerV1Parser.call_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCall_statement([NotNull] YarnSpinnerV1Parser.Call_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerV1Parser.command_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommand_statement([NotNull] YarnSpinnerV1Parser.Command_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerV1Parser.command_formatted_text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommand_formatted_text([NotNull] YarnSpinnerV1Parser.Command_formatted_textContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerV1Parser.shortcut_option_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShortcut_option_statement([NotNull] YarnSpinnerV1Parser.Shortcut_option_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerV1Parser.shortcut_option"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShortcut_option([NotNull] YarnSpinnerV1Parser.Shortcut_optionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OptionLink</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.option_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOptionLink([NotNull] YarnSpinnerV1Parser.OptionLinkContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OptionJump</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.option_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOptionJump([NotNull] YarnSpinnerV1Parser.OptionJumpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerV1Parser.option_formatted_text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOption_formatted_text([NotNull] YarnSpinnerV1Parser.Option_formatted_textContext context);
}
} // namespace Yarn.Compiler
