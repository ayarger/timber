//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Users/desplesda/Work/yarnspinner/YarnSpinner.Compiler/Upgrader/Upgraders/V1toV2/YarnSpinnerV1Parser.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Yarn.Compiler {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IYarnSpinnerV1ParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class YarnSpinnerV1ParserBaseListener : IYarnSpinnerV1ParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerV1Parser.dialogue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDialogue([NotNull] YarnSpinnerV1Parser.DialogueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerV1Parser.dialogue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDialogue([NotNull] YarnSpinnerV1Parser.DialogueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerV1Parser.file_hashtag"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFile_hashtag([NotNull] YarnSpinnerV1Parser.File_hashtagContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerV1Parser.file_hashtag"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFile_hashtag([NotNull] YarnSpinnerV1Parser.File_hashtagContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerV1Parser.node"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNode([NotNull] YarnSpinnerV1Parser.NodeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerV1Parser.node"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNode([NotNull] YarnSpinnerV1Parser.NodeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerV1Parser.header"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHeader([NotNull] YarnSpinnerV1Parser.HeaderContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerV1Parser.header"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHeader([NotNull] YarnSpinnerV1Parser.HeaderContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerV1Parser.body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBody([NotNull] YarnSpinnerV1Parser.BodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerV1Parser.body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBody([NotNull] YarnSpinnerV1Parser.BodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerV1Parser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] YarnSpinnerV1Parser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerV1Parser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] YarnSpinnerV1Parser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerV1Parser.line_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLine_statement([NotNull] YarnSpinnerV1Parser.Line_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerV1Parser.line_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLine_statement([NotNull] YarnSpinnerV1Parser.Line_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerV1Parser.line_formatted_text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLine_formatted_text([NotNull] YarnSpinnerV1Parser.Line_formatted_textContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerV1Parser.line_formatted_text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLine_formatted_text([NotNull] YarnSpinnerV1Parser.Line_formatted_textContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerV1Parser.format_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormat_function([NotNull] YarnSpinnerV1Parser.Format_functionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerV1Parser.format_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormat_function([NotNull] YarnSpinnerV1Parser.Format_functionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>KeyValuePairNamed</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.key_value_pair"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKeyValuePairNamed([NotNull] YarnSpinnerV1Parser.KeyValuePairNamedContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>KeyValuePairNamed</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.key_value_pair"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKeyValuePairNamed([NotNull] YarnSpinnerV1Parser.KeyValuePairNamedContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>KeyValuePairNumber</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.key_value_pair"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKeyValuePairNumber([NotNull] YarnSpinnerV1Parser.KeyValuePairNumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>KeyValuePairNumber</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.key_value_pair"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKeyValuePairNumber([NotNull] YarnSpinnerV1Parser.KeyValuePairNumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerV1Parser.hashtag"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHashtag([NotNull] YarnSpinnerV1Parser.HashtagContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerV1Parser.hashtag"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHashtag([NotNull] YarnSpinnerV1Parser.HashtagContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerV1Parser.line_condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLine_condition([NotNull] YarnSpinnerV1Parser.Line_conditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerV1Parser.line_condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLine_condition([NotNull] YarnSpinnerV1Parser.Line_conditionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expParens</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpParens([NotNull] YarnSpinnerV1Parser.ExpParensContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expParens</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpParens([NotNull] YarnSpinnerV1Parser.ExpParensContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expMultDivMod</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpMultDivMod([NotNull] YarnSpinnerV1Parser.ExpMultDivModContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expMultDivMod</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpMultDivMod([NotNull] YarnSpinnerV1Parser.ExpMultDivModContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expMultDivModEquals</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpMultDivModEquals([NotNull] YarnSpinnerV1Parser.ExpMultDivModEqualsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expMultDivModEquals</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpMultDivModEquals([NotNull] YarnSpinnerV1Parser.ExpMultDivModEqualsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expComparison</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpComparison([NotNull] YarnSpinnerV1Parser.ExpComparisonContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expComparison</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpComparison([NotNull] YarnSpinnerV1Parser.ExpComparisonContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expNegative</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpNegative([NotNull] YarnSpinnerV1Parser.ExpNegativeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expNegative</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpNegative([NotNull] YarnSpinnerV1Parser.ExpNegativeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expAndOrXor</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpAndOrXor([NotNull] YarnSpinnerV1Parser.ExpAndOrXorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expAndOrXor</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpAndOrXor([NotNull] YarnSpinnerV1Parser.ExpAndOrXorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expPlusMinusEquals</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpPlusMinusEquals([NotNull] YarnSpinnerV1Parser.ExpPlusMinusEqualsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expPlusMinusEquals</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpPlusMinusEquals([NotNull] YarnSpinnerV1Parser.ExpPlusMinusEqualsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expAddSub</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpAddSub([NotNull] YarnSpinnerV1Parser.ExpAddSubContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expAddSub</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpAddSub([NotNull] YarnSpinnerV1Parser.ExpAddSubContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expNot</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpNot([NotNull] YarnSpinnerV1Parser.ExpNotContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expNot</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpNot([NotNull] YarnSpinnerV1Parser.ExpNotContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expValue</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpValue([NotNull] YarnSpinnerV1Parser.ExpValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expValue</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpValue([NotNull] YarnSpinnerV1Parser.ExpValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expEquality</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpEquality([NotNull] YarnSpinnerV1Parser.ExpEqualityContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expEquality</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpEquality([NotNull] YarnSpinnerV1Parser.ExpEqualityContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>valueNumber</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueNumber([NotNull] YarnSpinnerV1Parser.ValueNumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>valueNumber</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueNumber([NotNull] YarnSpinnerV1Parser.ValueNumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>valueTrue</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueTrue([NotNull] YarnSpinnerV1Parser.ValueTrueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>valueTrue</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueTrue([NotNull] YarnSpinnerV1Parser.ValueTrueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>valueFalse</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueFalse([NotNull] YarnSpinnerV1Parser.ValueFalseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>valueFalse</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueFalse([NotNull] YarnSpinnerV1Parser.ValueFalseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>valueVar</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueVar([NotNull] YarnSpinnerV1Parser.ValueVarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>valueVar</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueVar([NotNull] YarnSpinnerV1Parser.ValueVarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>valueString</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueString([NotNull] YarnSpinnerV1Parser.ValueStringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>valueString</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueString([NotNull] YarnSpinnerV1Parser.ValueStringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>valueNull</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueNull([NotNull] YarnSpinnerV1Parser.ValueNullContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>valueNull</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueNull([NotNull] YarnSpinnerV1Parser.ValueNullContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>valueFunc</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueFunc([NotNull] YarnSpinnerV1Parser.ValueFuncContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>valueFunc</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueFunc([NotNull] YarnSpinnerV1Parser.ValueFuncContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerV1Parser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable([NotNull] YarnSpinnerV1Parser.VariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerV1Parser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable([NotNull] YarnSpinnerV1Parser.VariableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerV1Parser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction([NotNull] YarnSpinnerV1Parser.FunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerV1Parser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction([NotNull] YarnSpinnerV1Parser.FunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerV1Parser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_statement([NotNull] YarnSpinnerV1Parser.If_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerV1Parser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_statement([NotNull] YarnSpinnerV1Parser.If_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerV1Parser.if_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_clause([NotNull] YarnSpinnerV1Parser.If_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerV1Parser.if_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_clause([NotNull] YarnSpinnerV1Parser.If_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerV1Parser.else_if_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElse_if_clause([NotNull] YarnSpinnerV1Parser.Else_if_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerV1Parser.else_if_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElse_if_clause([NotNull] YarnSpinnerV1Parser.Else_if_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerV1Parser.else_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElse_clause([NotNull] YarnSpinnerV1Parser.Else_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerV1Parser.else_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElse_clause([NotNull] YarnSpinnerV1Parser.Else_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>setVariableToValue</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.set_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetVariableToValue([NotNull] YarnSpinnerV1Parser.SetVariableToValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>setVariableToValue</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.set_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetVariableToValue([NotNull] YarnSpinnerV1Parser.SetVariableToValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>setExpression</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.set_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetExpression([NotNull] YarnSpinnerV1Parser.SetExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>setExpression</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.set_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetExpression([NotNull] YarnSpinnerV1Parser.SetExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerV1Parser.call_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCall_statement([NotNull] YarnSpinnerV1Parser.Call_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerV1Parser.call_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCall_statement([NotNull] YarnSpinnerV1Parser.Call_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerV1Parser.command_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommand_statement([NotNull] YarnSpinnerV1Parser.Command_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerV1Parser.command_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommand_statement([NotNull] YarnSpinnerV1Parser.Command_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerV1Parser.command_formatted_text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommand_formatted_text([NotNull] YarnSpinnerV1Parser.Command_formatted_textContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerV1Parser.command_formatted_text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommand_formatted_text([NotNull] YarnSpinnerV1Parser.Command_formatted_textContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerV1Parser.shortcut_option_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShortcut_option_statement([NotNull] YarnSpinnerV1Parser.Shortcut_option_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerV1Parser.shortcut_option_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShortcut_option_statement([NotNull] YarnSpinnerV1Parser.Shortcut_option_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerV1Parser.shortcut_option"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShortcut_option([NotNull] YarnSpinnerV1Parser.Shortcut_optionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerV1Parser.shortcut_option"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShortcut_option([NotNull] YarnSpinnerV1Parser.Shortcut_optionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>OptionLink</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.option_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOptionLink([NotNull] YarnSpinnerV1Parser.OptionLinkContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>OptionLink</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.option_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOptionLink([NotNull] YarnSpinnerV1Parser.OptionLinkContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>OptionJump</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.option_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOptionJump([NotNull] YarnSpinnerV1Parser.OptionJumpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>OptionJump</c>
	/// labeled alternative in <see cref="YarnSpinnerV1Parser.option_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOptionJump([NotNull] YarnSpinnerV1Parser.OptionJumpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerV1Parser.option_formatted_text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOption_formatted_text([NotNull] YarnSpinnerV1Parser.Option_formatted_textContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerV1Parser.option_formatted_text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOption_formatted_text([NotNull] YarnSpinnerV1Parser.Option_formatted_textContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Yarn.Compiler
